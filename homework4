// judges.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_JUDGES 100
#define BUFFER_SIZE 512
#define FIELD_COUNT 7

char *judges_array[MAX_JUDGES];

void display_judges(char *project, int total_judges) {
    printf("####################################\n");
    printf("#        Display Judge Data        #\n");
    printf("####################################\n");

    for (int i = 0; i < total_judges; i++) {
        printf("[Judge %d]\n", i + 1);
        char name[50], gender[10], affiliation[50], title[50], expertise[30], email[50], phone[20];

        sscanf(judges_array[i],
               "Name: %[^,], Gender: %[^,], Affiliation: %[^,], Title: %[^,], Specialty: %[^,], Email: %[^,], Phone: %[^\n]",
               name, gender, affiliation, title, expertise, email, phone);

        printf("Name: %s\n", name);
        printf("Gender: %s\n", gender);
        printf("Affiliation: %s\n", affiliation);
        printf("Title: %s\n", title);
        printf("Expertise: %s\n", expertise);
        printf("Email: %s\n", email);
        printf("Phone: %s\n", phone);
        printf("-----------------------------------\n");
    }
}

int count_commas(const char *str) {
    int count = 0;
    while (*str) {
        if (*str == ',') count++;
        str++;
    }
    return count;
}

int main() {
    char project[100];
    int total_judges;

    printf("####################################\n");
    printf("#      Judge List Data Entry      #\n");
    printf("####################################\n");

    printf("Participating Project: ");
    fgets(project, sizeof(project), stdin);
    project[strcspn(project, "\n")] = '\0'; // Remove newline

    printf("Total Number of Judges: ");
    scanf("%d", &total_judges);
    getchar(); // consume newline

    if (total_judges > MAX_JUDGES) {
        printf("Too many judges. Max allowed is %d.\n", MAX_JUDGES);
        return 1;
    }

    printf("Number of Selected Members: 4\n");
    printf("++++++++++++++++++++++++++++++++++++\n");
    printf("Starting to input information for %d judges.\n", total_judges);
    printf("++++++++++++++++++++++++++++++++++++\n");

    int i = 0;
    while (i < total_judges) {
        char buffer[BUFFER_SIZE];
        printf("Judge %d: ", i + 1);
        fgets(buffer, sizeof(buffer), stdin);

        if (count_commas(buffer) != FIELD_COUNT - 1) {
            printf("The input items are incorrect. Please enter them again.\n");
            continue;
        }

        judges_array[i] = (char *)malloc(strlen(buffer) + 1);
        if (!judges_array[i]) {
            printf("Memory allocation failed.\n");
            return 1;
        }
        strcpy(judges_array[i], buffer);
        i++;
    }

    printf("++++++++++++++++++++++++++++++++++++\n");
    printf("Judge information entry is complete.\n");
    printf("++++++++++++++++++++++++++++++++++++\n");

    printf("\"%s Should we check the judge information? (Y/N)\" ", project);
    char check;
    scanf(" %c", &check);  // note the space before %c to skip whitespace

    if (check == 'Y') {
        display_judges(project, total_judges);
    } else {
        printf("Program terminated.\n");
    }

    // Free memory
    for (int j = 0; j < total_judges; j++) {
        free(judges_array[j]);
    }

    return 0;
}
